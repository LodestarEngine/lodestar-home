<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recipes on</title><link>https://ldstr.dev/docs/recipes/</link><description>Recent content in Recipes on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 01 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ldstr.dev/docs/recipes/index.xml" rel="self" type="application/rss+xml"/><item><title>PID Controller</title><link>https://ldstr.dev/docs/recipes/pid/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://ldstr.dev/docs/recipes/pid/</guid><description>❓ For more background on PID controllers, see this theory page. In this recipe, we will prepare a simple discretized PID controller. As a bonus, we show how to take this prebaked controller to the next level by programming a PID controller with anti-windup from scratch.
Gathering the Ingredients # You will need the following standard library blocks:
ConstantBlock, for a constant setpoint. SumBlock, to add and subtract signals.</description></item><item><title>LQR Controller</title><link>https://ldstr.dev/docs/recipes/lqr/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://ldstr.dev/docs/recipes/lqr/</guid><description>⚠️ This is a work-in-progress. See this example for now.</description></item></channel></rss>